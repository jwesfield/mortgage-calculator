{"version":3,"sources":["logo.svg","components/SlideInput/SlideInput.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Text","Typography","SlideInput","props","onChange","value","setInputValue","localStorage","setItem","storage","onChangePercent","console","log","setPercent","home","span","strong","title","min","max","step","percent","inputValue","percentOnly","className","style","margin","formatter","replace","parser","disabled","boxes","type","getTotal","tax","lawyer","agent","other","res","parseInt","e","App","useState","getItem","setHome","setTax","tax_percent","setTax_percent","setAgent","agent_percent","setAgent_percent","setLawyer","lawyer_percent","setLawyer_percent","setOther","downpayment","setDownpayment","mortgage","setMortgage","rate","setRate","years","setYears","monthlyPayment","setMonthlyPayment","rateChanged","calculateMortgague","r","n","M","Math","pow","useEffect","prefix","round","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.76f97a3e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { useState, useEffect } from 'react';\nimport './SlideInput.css';\nimport { Slider, InputNumber, Row, Col, Typography, Divider } from 'antd';\nconst { Text } = Typography;\n\nfunction SlideInput(props) {\n\n  function onChange(value) {\n    props.setInputValue(value);\n    localStorage.setItem(props.storage, value);\n  }\n\n  function onChangePercent(value) {\n    console.log(props)\n    props.setPercent(value);\n    localStorage.setItem(props.storage + '_percent', value);\n    if(props.storage != \"rate\"){\n      props.setInputValue(props.home * (value / 100));\n      localStorage.setItem(props.storage, props.home * (value / 100));\n    } else {\n      onChange(value);\n    }\n  }\n\n  function pFormatter(value) {\n    return `${value}%`;\n  }\n  function pParser(value) {\n    return value.replace('%', '');\n  }\n  \n  function cFormatter(value) {\n    if(props.storage === 'years'){\n      return `${value} years`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n    } else {\n      return `₪ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n    }\n    \n  }\n  function cParser(value) {\n    if(props.storage === 'years'){\n      return value.replace(/\\₪\\s?|(,*)/g, '');\n    } else {\n      return value.replace(/\\₪\\s?|(,*)/g, '');\n    }\n    \n  }\n\n  return (\n    <div>\n      <Row>\n        <Col span={4}>\n          <Text strong>{props.title}</Text>\n        </Col>\n        <Col span={8}>\n          <Slider\n            min={props.home ? 0 : props.min}\n            max={props.home ? 10 : props.max}\n            step={props.percent ? props.step < 0.5 ? props.step : 0.5 : props.step}\n            onChange={props.percent ? onChangePercent : onChange}\n            value={props.percent ? props.percent : props.inputValue}\n          />\n        </Col>\n        <Col span={3}>\n          {props.percentOnly == true ? null :\n                <InputNumber\n                className=\"inputCurrency\"\n                min={props.min || 0}\n                max={props.max || 100}\n                step={props.step || 1}\n                style={{ margin: '0 16px' }}\n                value={props.inputValue}\n                onChange={onChange}\n                formatter={cFormatter}\n                parser={cParser}\n                disabled={!props.boxes[0]}\n              />}\n        </Col>\n        <Col span={3}>\n          {props.boxes[1] == true ? (\n            <InputNumber\n              min={0}\n              max={10}\n              step={props.step < 0.5 ? props.step : 0.5}\n              style={{ margin: '0 16px' }}\n              value={props.percent}\n              onChange={onChangePercent}\n              formatter={pFormatter}\n              parser={pParser}\n            />\n          ) : null}\n        </Col>\n      </Row>\n      <Divider type=\"horizontal\" />\n    </div>\n  );\n}\n\nexport default SlideInput;\n","import React, { useState, useEffect } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Row, Col, Divider, Statistic } from 'antd';\nimport 'antd/dist/antd.css'; // or 'antd/dist/antd.less'\nimport SlideInput from './components/SlideInput/SlideInput';\nfunction App() {\n\n  const [home, setHome] = useState(localStorage.getItem('home') || 0);\n  const [tax, setTax] = useState(localStorage.getItem('tax') || 0);\n  const [tax_percent, setTax_percent] = useState(localStorage.getItem('tax_percent') || 0)\n  const [agent, setAgent] = useState(localStorage.getItem('agent') || 0);\n  const [agent_percent, setAgent_percent] = useState(localStorage.getItem('agent_percent') || 0);\n  const [lawyer, setLawyer] = useState(localStorage.getItem('lawyer') || 0);\n  const [lawyer_percent, setLawyer_percent] = useState(localStorage.getItem('lawyer_percent') || 0);\n  const [other, setOther] = useState(localStorage.getItem('other') || 0);\n  const [downpayment, setDownpayment] = useState(localStorage.getItem('downpayment') || 0);\n  const [mortgage, setMortgage] = useState(localStorage.getItem('mortgage') || 0);\n  const [rate, setRate] = useState(localStorage.getItem('rate') || 0);\n  const [years, setYears] = useState(localStorage.getItem('years') || 0);\n  const [monthlyPayment, setMonthlyPayment] = useState(0);\n\n\n  useEffect(() => {\n    calculateMortgague(mortgage,rate,years);\n  }, []);\n\n\nfunction homeChanged(value){\n  setHome(value);\n  setTax(value * (tax_percent / 100))\n  setAgent(value * (agent_percent / 100))\n  setLawyer(value * (lawyer_percent / 100))\n}\n\nfunction mortgageChanged(value){\n  setMortgage(value);\n  calculateMortgague(value,rate,years);\n}\n\nfunction rateChanged(value){\n  setRate(value);\n  calculateMortgague(mortgage,value,years)\n}\n\nfunction yearsChanged(value){\n  setYears(value);\n  calculateMortgague(mortgage,rate,value)\n}\n\nfunction calculateMortgague(mortgage,rate,years){\n  var r = rate / 12 / 100;\n  var n = years * 12;\n  var M = mortgage * ((r * Math.pow((1 + r), n)) / (Math.pow((1 + r), n) - 1));\n  setMonthlyPayment(M)\n}\n\n\n  return (\n    <div className=\"App\">\n      <Divider type=\"horizontal\" />\n      <SlideInput\n        boxes={[true, false]}\n        inputValue={home}\n        setInputValue={homeChanged}\n        min={1500000}\n        max={4000000}\n        step={50000}\n        storage={'home'}\n        title={'Home Price'}\n      />\n\n      <SlideInput\n        home={home}\n        boxes={[false, true]}\n        inputValue={tax}\n        setInputValue={setTax}\n        min={0}\n        max={4000000}\n        step={0.5}\n        storage={'tax'}\n        percent={tax_percent}\n        setPercent={setTax_percent}\n        title={'Purchase Tax'}\n      />\n      <SlideInput\n        home={home}\n        boxes={[false, true]}\n        inputValue={agent}\n        setInputValue={setAgent}\n        min={0}\n        max={4000000}\n        step={0.5}\n        storage={'agent'}\n        percent={agent_percent}\n        setPercent={setAgent_percent}\n        title={'Agent'}\n      />\n      <SlideInput\n        home={home}\n        boxes={[false, true]}\n        inputValue={lawyer}\n        setInputValue={setLawyer}\n        min={0}\n        max={4000000}\n        step={0.5}\n        storage={'lawyer'}\n        percent={lawyer_percent}\n        setPercent={setLawyer_percent}\n        title={'Lawyer'}\n      />\n      <SlideInput\n        boxes={[true, false]}\n        inputValue={other}\n        setInputValue={setOther}\n        min={0}\n        max={200000}\n        step={1000}\n        storage={'other'}\n        title={'Other'}\n      />\n      <Statistic title=\"Total Home Cost\" value={getTotal(home,tax,lawyer,agent,other)} prefix={\"₪\"} />\n      <Divider type=\"horizontal\" />\n      <SlideInput\n        boxes={[true, false]}\n        inputValue={downpayment}\n        setInputValue={setDownpayment}\n        min={0}\n        max={4000000}\n        step={10000}\n        storage={'downpayment'}\n        title={'Down Payment'}\n      />\n        <SlideInput\n        boxes={[true, false]}\n        inputValue={mortgage}\n        setInputValue={mortgageChanged}\n        min={0}\n        max={3000000}\n        step={10000}\n        storage={'mortgage'}\n        title={'Mortgage Amount'}\n      />\n      <SlideInput\n        boxes={[false, true]}\n        inputValue={rate}\n        setInputValue={rateChanged}\n        percent={rate}\n        setPercent={rateChanged}\n        min={0}\n        max={7}\n        step={0.1}\n        storage={'rate'}\n        percentOnly={true}\n        title={'Mortgage Interest Rate'}\n      />\n      <SlideInput\n        boxes={[true, false]}\n        inputValue={years}\n        setInputValue={yearsChanged}\n        min={0}\n        max={40}\n        step={1}\n        storage={'years'}\n        title={'Loan Term'}\n      />\n      \n      <Row>\n        <Col span={6}>\n        <Statistic title=\"Monthly Payment\" value={Math.round(monthlyPayment)} prefix={\"₪\"} />\n        </Col>\n        <Col span={6}>\n        <Statistic title=\"Annual Payment\" value={Math.round(monthlyPayment * 12)} prefix={\"₪\"} />\n\n        </Col>\n        <Col span={6}>\n        <Statistic title=\"Total Interest Paid\" value={Math.round((monthlyPayment * years * 12) - mortgage)} prefix={\"₪\"} />\n\n        </Col>\n        <Col span={6}>\n        <Statistic title=\"Total Paid\" value={Math.round(monthlyPayment * years * 12)} prefix={\"₪\"} />\n\n        </Col>\n      </Row>\n      <Divider type=\"horizontal\" />\n    </div>\n  );\n}\n\nfunction getTotal(home,tax,lawyer,agent,other){\n  var res = 0 ;\n  try {\n    res = parseInt(home) + parseInt(tax) + parseInt(lawyer) + parseInt(agent) + parseInt(other)\n  } catch(e){\n\n  }\nreturn res;\n}\n\nexport default App;\n\n//https://dev.to/yuribenjamin/how-to-deploy-react-app-in-github-pages-2a1f\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}